<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    <http:listener-config name="mule4-sct-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="${http.port}" />
    </http:listener-config>
    <apikit:config name="mule4-sct-config" api="mule4-sct.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <java:config name="Java_Config" doc:name="Java Config" doc:id="c568d0f4-f4a2-4800-9596-b699c6db953c" />
	<configuration-properties doc:name="Configuration properties" doc:id="43cfba64-abfa-4497-930c-1d0df0759455" file="application-properties.yaml" />
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="f11426ad-da59-4a60-a464-fc23f232c1ca" basePath="/sct-api/" >
		<http:request-connection host="localhost" port="${http.port}" />
	</http:request-config>
	<flow name="mule4-sct-main">
        <http:listener config-ref="mule4-sct-httpListenerConfig" path="/sct-api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mule4-sct-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="mule4-sct-console">
        <http:listener config-ref="mule4-sct-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mule4-sct-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\test:mule4-sct-config">
		<set-variable value="#[%dw 2.0
output text/plain
---
if (vars.testType?)
	vars.testType
else
	attributes.queryParams.testType]" doc:name="Set Test Type" doc:id="bfa8e97e-0a4a-4e18-b214-38ff3e4aef6a" variableName="testType"/>
		<set-variable value="#[%dw 2.0
---
if (vars.numRecords?)
	vars.numRecords
else
	attributes.queryParams.numRecords]" doc:name="Set Num Records" doc:id="475c23d5-f09e-48d4-bc29-d21e46115218" variableName="numRecords"/>
		<java:invoke-static doc:name="Populate Input Data" doc:id="f2b35b46-3821-4617-896e-b823096e2654" 
		class="com.deloitte.sct.datadrivers.DataGenerator"
		method="generateMovies(int)" outputMimeType="application/java">
			<java:args><![CDATA[#[{
  numRecords: vars.numRecords as Number
}]]]></java:args>
		</java:invoke-static>
		<choice doc:name="Type of Test?" doc:id="1210e7be-eb4a-4e96-bae5-b1637028ee1a" >
			<when expression='#[vars.testType == "DTL"]'>
				<set-variable value="#[%dw 2.0
import java!com::deloitte::sct::datadrivers::DataGenerator
---
DataGenerator::getNanoTime()]" doc:name="Set Start Time" doc:id="b2fe488e-f5c9-46df-9ace-5da0c04076d6" variableName="startTime" />
				<ee:transform doc:name="DataWeave Transformation" doc:id="299e0f0b-464d-485b-ba25-b9be0832cc6d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
movies: movie: payload map (() -> {
		name: $.name,
		duration: $.duration,
		rating: $.rating,
		showtimes: showtime: $.showtimes map ((stItem, stIndex) -> {
			startTime: stItem.startTime,
			theatreName: stItem.theatreName,
			vipAvailable: stItem.vipAvailable
		})
})]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[%dw 2.0
import java!com::deloitte::sct::datadrivers::DataGenerator
---
DataGenerator::getNanoTime()]" doc:name="Set End Time" doc:id="c3db5be1-e1e3-4805-9005-2ce146237f4a" variableName="endTime" />
				<logger level="DEBUG" doc:name="Log Result" doc:id="05c73f00-7f6f-4f97-84b7-3869bc7703e6" message="#[payload]"/>
				<ee:transform doc:name="Transform Message" doc:id="18d0085b-9736-430e-a222-8a8628817fb2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	timeInMillis: (vars.endTime - vars.startTime) / 1000000,
	timeInNanos: vars.endTime - vars.startTime,
	xmlResult: "payload would go here"
} as Object {class: "com.deloitte.sct.datamodel.TransformationResult"}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<when expression='#[vars.testType == "DTL2"]'>
				<ee:transform doc:name="refactor payload" doc:id="f3df0562-bf09-4083-bddf-e36e62a5e8da">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
movies: movie: payload map (() -> {
		name: $.name,
		duration: $.duration,
		rating: $.rating,
		showtimes: showtime: $.showtimes map ((stItem, stIndex) -> {
			startTime: stItem.startTime,
			theatreName: stItem.theatreName,
			vipAvailable: stItem.vipAvailable
		})
})]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[%dw 2.0
import java!com::deloitte::sct::datadrivers::DataGenerator
---
DataGenerator::getNanoTime()]" doc:name="Set Start Time" doc:id="70746bc7-1f5b-4bd6-a57c-a21061fca461" variableName="startTime" />
				<ee:transform doc:name="DataWeave Transformation" doc:id="e7abaccd-a901-40a6-ae3c-5b5af574fe48" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[%dw 2.0
import java!com::deloitte::sct::datadrivers::DataGenerator
---
DataGenerator::getNanoTime()]" doc:name="Set End Time" doc:id="240cf843-039a-467f-ae68-f7ba1815eb46" variableName="endTime" />
				<logger level="DEBUG" doc:name="Log Result" doc:id="f1c44004-74b3-441c-9497-8dfd485c5d9f" message="#[payload]"/>
				<ee:transform doc:name="Transform Message" doc:id="7842102a-3a86-4a11-904e-69f8603241f3" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	timeInMillis: (vars.endTime - vars.startTime) / 1000000,
	timeInNanos: vars.endTime - vars.startTime,
	xmlResult: "payload would go here"
} as Object {class: "com.deloitte.sct.datamodel.TransformationResult"}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<when expression='#[vars.testType == "StringBuilder"]'>
				<java:invoke-static doc:name="String Builder" 
				doc:id="af34bbd8-7b89-40c0-a158-02e8c634e9ae" 
				class="com.deloitte.sct.transformers.JavaTransformers" 
				method="stringBuilderTransformer(java.util.List)" 
				outputMimeType="application/java">
					<java:args ><![CDATA[#[{
	movies: payload
}]]]></java:args>
				</java:invoke-static>
				<logger level="DEBUG" doc:name="Log Result" doc:id="00274f3d-f89c-49a2-8f65-8886e8ebd667" message="#[payload.xmlResult]"/>
			</when>
			<when expression='#[vars.testType == "StringBuffer"]'>
				<java:invoke-static doc:name="String Buffer" 
				doc:id="d9ae4f40-4dac-43ec-abb5-94d810f44802" 
				class="com.deloitte.sct.transformers.JavaTransformers" 
				method="stringBufferTransformer(java.util.List)" 
				outputMimeType="application/java">
					<java:args ><![CDATA[#[{
	movies: payload
}]]]></java:args>
				</java:invoke-static>
				<logger level="DEBUG" doc:name="Log Result" doc:id="a36aad9b-e13d-4149-9b42-94c34fc91bd9" message="#[payload.xmlResult]"/>
			</when>
			<when expression='#[vars.testType == "ConcatMethod"]'>
				<java:invoke-static doc:name="Concat Method" 
				doc:id="80757a1b-5e76-40e5-8e18-efaa7c97298b" 
				class="com.deloitte.sct.transformers.JavaTransformers" 
				method="concatMethodTransformer(java.util.List)" 
				outputMimeType="application/java">
					<java:args ><![CDATA[#[{
	movies: payload
}]]]></java:args>
				</java:invoke-static>
				<logger level="DEBUG" doc:name="Log Result" doc:id="3a59aff5-f8a2-4f62-8a8a-922b09c9299d" message="#[payload.xmlResult]"/>
			</when>
			<otherwise >
				<java:invoke-static doc:name="Concatenation" 
				doc:id="cd851311-c3dc-4b5c-bc73-cc180a9041b7" 
				class="com.deloitte.sct.transformers.JavaTransformers" 
				method="stringConcatenationTransformer(java.util.List)" 
				outputMimeType="application/java">
					<java:args ><![CDATA[#[{
	movies: payload
}]]]></java:args>
				</java:invoke-static>
				<logger level="DEBUG" doc:name="Log Result" doc:id="3bdb3883-b853-46d5-93c6-49d330c9965d" message="#[payload.xmlResult]"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Generate Output" doc:id="aa9a84be-fcc3-4c1a-bccc-c4f4cdeb66d8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	testType: vars.testType,
	completedInMillis: payload.timeInMillis,
	completedInNanos: payload.timeInNanos,
	numRecords: vars.numRecords
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="get:\testDriver:mule4-sct-config">
		<set-variable value="#[attributes.queryParams.testType]" doc:name="Set Test Type" doc:id="38f9b6bd-e674-4ec3-80dd-cb22c7c25eba" variableName="testType"/>
		<set-variable value="#[attributes.queryParams.numIterations]" doc:name="Set Num Iterations" doc:id="26918dd4-ef40-4271-9089-0925aa235a59" variableName="numIterations"/>
		<set-variable value="#[attributes.queryParams.numRecords]" doc:name="Set Num Records" doc:id="a4b9dd0f-5df2-4317-8105-b615fc9954e6" variableName="numRecords"/>
		<set-variable value="#[[]]" doc:name="Initialize Milli Result Array" doc:id="6d2f7ed5-3fa3-4812-aba9-2ac56c572a3b" variableName="millisResultSet" mimeType="application/java"/>
		<set-variable value="#[[]]" doc:name="Initialize Nano Result Array" doc:id="fb798743-334b-490a-b5c6-2c49f264b648" variableName="nanosResultSet" mimeType="application/java"/>
		<java:invoke-static doc:name="Generate Test Data Driver Objects" doc:id="077395c9-7dca-4ece-a41b-8112f06b9fc0" class="com.deloitte.sct.datadrivers.DataGenerator" method="generateTestRuns(int,int,java.lang.String)" outputMimeType="application/java">
			<java:args ><![CDATA[#[{
	numIterations: vars.numIterations,
	numRecords: vars.numRecords,
	testType: vars.testType
}]]]></java:args>
		</java:invoke-static>
		<foreach doc:name="For Each" doc:id="a88bc0f9-8730-4209-9faa-38ea7a190a8c" collection="#[payload]">
			<flow-ref doc:name="Flow Reference" doc:id="5e2b7acd-5371-4cfd-a8c8-f8b5d109b055" name="get:\test:mule4-sct-config" target="requestResult"/>
			<set-variable value="#[%dw 2.0
output application/java
---
vars.millisResultSet &lt;&lt; vars.requestResult.completedInMillis]" doc:name="Update Milli Array" doc:id="bf00dfc1-45d0-4f02-889d-b3fcb19eaecc" variableName="millisResultSet" mimeType="application/java"/>
			<set-variable value="#[%dw 2.0
output application/java
---
if (vars.requestResult.completedInNanos &gt; 0)
	vars.nanosResultSet &lt;&lt; vars.requestResult.completedInNanos
else
	vars.nanosResultSet]" doc:name="Update Nano Array" doc:id="e028593a-61a4-4626-84de-29d4e87062a7" variableName="nanosResultSet" mimeType="application/java"/>
		</foreach>
		<ee:transform doc:name="Generate Response" doc:id="6a975b28-5232-4a5c-beba-7f33d5090dba" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
      testType: vars.testType,
      averageResponseMillis: avg(vars.millisResultSet),
      averageResponseNanos: avg(vars.nanosResultSet),
      minResponseMillis: min(vars.millisResultSet),
      minResponseNanos: min(vars.nanosResultSet),
      numIterations: vars.numIterations,
      numRecords: vars.numRecords,
      numCounted: sizeOf(vars.nanosResultSet)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
</mule>
